<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:rabbit="http://www.springframework.org/schema/rabbit"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/rabbit  
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd">
   
   <!--  <context:property-placeholder location="classpath:config/jdbc.properties" /> -->
   
    <!--配置connection-factory，指定连接rabbit server参数 -->
    <!-- <rabbit:connection-factory id="connectionFactory" virtual-host="${mq-virtual}" 
        username="${mq-username}" password="${mq-password}" host="${mq-host}" port="${mq-port}"/>   -->
        
    <rabbit:connection-factory id="connectionFactory"  host="${mq-host}" />  

    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin id="connectAdmin" connection-factory="connectionFactory" />

    <!--定义queue -->
      <!-- 利用admin来定义队列,spring会自动根据下面的定义创建队列   
        	队列名 是否持久化   是否是排他队列 不使用的时候是否删除  -->  
        	
    <rabbit:queue name="queueTest" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" /> 
    <rabbit:queue name="dailyIncrementSyncQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" />
     <rabbit:queue name="firstEntrieSyncQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" /> 
     <rabbit:queue name="downloadQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" /> 
     <rabbit:queue name="campRtrptsTotalQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" />
     <rabbit:queue name="firstProtionSyncQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" /> 
     <rabbit:queue name="targetUpdateQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" /> 
        
     <rabbit:queue name="creativeListQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" />
        
     <rabbit:queue name="chargeMonitorQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" /> 
     <rabbit:queue name="creativeMonitorCtrQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" />
     <rabbit:queue name="creativeMonitorTestQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" /> 
     <rabbit:queue name="crowdMonitorCoverageQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" /> 
     <rabbit:queue name="priceTemplateMonitorQueue" durable="true" auto-delete="false"
        exclusive="false" declared-by="connectAdmin" /> 

    <!-- 定义direct exchange，绑定queueTest -->
    <rabbit:direct-exchange name="exchangeConfig"
        durable="true" auto-delete="false" declared-by="connectAdmin">
        <rabbit:bindings>
            <rabbit:binding queue="queueTest" key="queueTest"></rabbit:binding> 
            <rabbit:binding queue="dailyIncrementSyncQueue" key="dailyIncrementSyncQueue"></rabbit:binding>
            <rabbit:binding queue="firstEntrieSyncQueue" key="firstEntrieSyncQueue"></rabbit:binding>
            <rabbit:binding queue="downloadQueue" key="downloadQueue"></rabbit:binding>
            <rabbit:binding queue="campRtrptsTotalQueue" key="campRtrptsTotalQueue"></rabbit:binding>
            <rabbit:binding queue="firstProtionSyncQueue" key="firstProtionSyncQueue"></rabbit:binding>
            
            <rabbit:binding queue="targetUpdateQueue" key="targetUpdateQueue"></rabbit:binding>
         	<rabbit:binding queue="creativeListQueue" key="creativeListQueue"></rabbit:binding>
        
        	<rabbit:binding queue="creativeMonitorCtrQueue" key="creativeMonitorCtrQueue"></rabbit:binding>
        	<rabbit:binding queue="crowdMonitorCoverageQueue" key="crowdMonitorCoverageQueue"></rabbit:binding>
        	<rabbit:binding queue="chargeMonitorQueue" key="chargeMonitorQueue"></rabbit:binding>
        	<rabbit:binding queue="priceTemplateMonitorQueue" key="priceTemplateMonitorQueue"></rabbit:binding>
        	
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!--定义rabbit template用于数据的接收和发送 -->
    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
        exchange="exchangeConfig" />
        
  	<!-- 定义消费者,消费消息 -->  
    <bean id="directConsumer" class="com.huonu.mq.consumer.MessageDirectConsumer"></bean>   
    <bean id="firstEntrieSyncConsumer" class="com.huonu.mq.consumer.FirstEntrieSyncConsumer"></bean>  
    <bean id="dailyIncrementSyncConsumer" class="com.huonu.mq.consumer.DailyIncrementSyncConsumer"></bean>  
    <bean id="downloadConsumer" class="com.huonu.mq.consumer.DownloadConsumer"></bean>
    <bean id="campRtrptsTotalConsumer" class="com.huonu.mq.consumer.CampRtrptsTotalConsumer"></bean>
    <bean id="firstProtionSyncConsumer" class="com.huonu.mq.consumer.FirstProtionSyncConsumer"></bean>
    <bean id="targetUpdateConsumer" class="com.huonu.mq.consumer.TargetUpdateConsumer"></bean>
   	<bean id="creativeListConsumer" class="com.huonu.mq.consumer.CreativeListConsumer"></bean>
    <bean id="creativeMonitorCtrConsumer" class="com.huonu.mq.consumer.CreativeMonitorCtrConsumer"></bean>
    <bean id="crowdMonitorCoverageConsumer" class="com.huonu.mq.consumer.CrowdMonitorCoverageConsumer"></bean>
    <bean id="chargeMonitorConsumer" class="com.huonu.mq.consumer.ChargeMonitorConsumer"></bean>
    <bean id="priceMonitorTemplateConsumer" class="com.huonu.mq.consumer.PriceMonitorTemplateConsumer"></bean>
      
    <!--开启监听-->  
    <rabbit:listener-container  connection-factory="connectionFactory">  
        <rabbit:listener ref="downloadConsumer" queues="downloadQueue"/> 
    </rabbit:listener-container>    
    
    <rabbit:listener-container concurrency="2" connection-factory="connectionFactory"> 
     	<rabbit:listener ref="directConsumer" queues="queueTest"/> 
     	<rabbit:listener ref="campRtrptsTotalConsumer" queues="campRtrptsTotalQueue"/>
     	<rabbit:listener ref="dailyIncrementSyncConsumer" queues="dailyIncrementSyncQueue"/>
     	<rabbit:listener ref="firstProtionSyncConsumer" queues="firstProtionSyncQueue"/>
     	<rabbit:listener ref="targetUpdateConsumer" queues="targetUpdateQueue"/>
     	<rabbit:listener ref="creativeListConsumer" queues="creativeListQueue"/>
    </rabbit:listener-container>
    
    <rabbit:listener-container concurrency="3" connection-factory="connectionFactory">
    	<rabbit:listener ref="firstEntrieSyncConsumer" queues="firstEntrieSyncQueue"/>
    </rabbit:listener-container>
    
    <rabbit:listener-container concurrency="5" connection-factory="connectionFactory">
    	<rabbit:listener ref="creativeMonitorCtrConsumer" queues="creativeMonitorCtrQueue"/>
    	<rabbit:listener ref="crowdMonitorCoverageConsumer" queues="crowdMonitorCoverageQueue"/>
    	<rabbit:listener ref="chargeMonitorConsumer" queues="chargeMonitorQueue"/>
    	<rabbit:listener ref="priceMonitorTemplateConsumer" queues="priceTemplateMonitorQueue"/>
    </rabbit:listener-container>
    
</beans>